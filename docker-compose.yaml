version: "3.8"

services:
  app:
    build: ./serving
    restart: unless-stopped
    container_name: app
    env_file:
      - .env
    ports:
      - 8000:8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8000"]
    volumes:
      - ./training/artifacts:/pf/artifacts/
    depends_on:
      mlflow:
        condition: service_started
      mysql:
        condition: service_started
    networks:
      pf-backend:

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    container_name: prometheus
    ports:
      - 9090:9090
    depends_on:
      app:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:9090"]
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      pf-backend:

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    user: "472"
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources/
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards/
    env_file:
      - ./monitoring/grafana/config.monitoring
    networks:
      pf-backend:

  mysql:
    image: mysql:8.0
    cap_add:
      - SYS_NICE
    restart: always
    container_name: mysql
    ports:
      - "3306:3306"
    networks:
      pf-backend:
    healthcheck:
        test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
        timeout: 20s
        retries: 10
    # env_file:
    #   - .env
    environment:
      - MYSQL_DATABASE=${MYSQL_DB}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PWD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PWD}
    volumes:
      - mysql_db:/var/lib/mysql

  mlflow:
    restart: always
    build: ./training
    image: atcommons/mlflow-server
    container_name: mlflow
    env_file:
      - .env
    ports:
      - "5000:5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:5000"]
    depends_on:
      mysql_mlflow:
        condition: service_healthy
    command: mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri mysql+pymysql://${MYSQL_MLFLOW_USER}:${MYSQL_MLFLOW_PWD}@mysql_mlflow:3306/${MYSQL_MLFLOW_DB} --default-artifact-root ${MLFLOW_ARTIFACT_ROOT}
    # command: mlflow server --backend-store-uri=sqlite:///artifacts.db --default-artifact-root=file:training/artifacts --host 0.0.0.0 --port 5000
    networks:
      pf-backend:

  mysql_mlflow:
    image: mysql:8.0
    container_name: mysql_mlflow
    # env_file:
    #   - .env
    environment:
      - MYSQL_DATABASE=${MYSQL_MLFLOW_DB}
      - MYSQL_USER=${MYSQL_MLFLOW_USER}
      - MYSQL_PASSWORD=${MYSQL_MLFLOW_PWD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_MLFLOW_ROOT_PWD}
    # ports:
    #   - "3306:3306"
    healthcheck:
        test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
        timeout: 20s
        retries: 10
    restart: always
    volumes:
      - mysql_mlflow_db:/var/lib/mysql
    cap_add:
      - SYS_NICE
    networks:
      pf-backend:

volumes:
  mysql_db:
  mysql_mlflow_db:

networks:
  pf-backend:
    driver: bridge