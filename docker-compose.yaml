version: "3.8"

services:
  app:
    build: ./serving
    restart: unless-stopped
    container_name: app
    ports:
      - 8000:8000
    networks:
      example-network:
        ipv4_address: 172.16.238.10

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      example-network:
        ipv4_address: 172.16.238.11

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    user: "472"
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./monitoring/grafana/datasource.yml:/etc/grafana/provisioning/datasource.yml
    env_file:
      - ./monitoring/grafana/config.monitoring
    networks:
      example-network:
        ipv4_address: 172.16.238.12

  locust:
    build: ./testing
    restart: unless-stopped
    container_name: locust
    ports:
      - 8089:8089
    networks:
      example-network:
        ipv4_address: 172.16.238.13

  mysql:
    image: mysql:8.0
    cap_add:
      - SYS_NICE
    restart: always
    container_name: mysql
    ports:
      - "3306:3306"
    networks:
      example-network:
        ipv4_address: 172.16.238.14
    environment:
      - MYSQL_DATABASE=${MYSQL_DB}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PWD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PWD}
    volumes:
      - db:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  mlflow:
    restart: always
    build: ./training
    image: atcommons/mlflow-server
    container_name: mlflow
    ports:
      - "5000:5000"
    volumes:
      - "./data:/mlflow"
    networks:
      example-network:
        ipv4_address: 172.16.238.15

  # nginx:
  #   restart: always
  #   build: ./nginx
  #   image: mlflow_nginx
  #   container_name: mlflow_nginx
  #   ports:
  #     - "80:80"
  #   networks:
  #     - frontend
  #   depends_on:
  #     - web

volumes:
  db:
    driver: local

networks:
  example-network:
    name: example-network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
